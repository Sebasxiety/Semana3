<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABNdJREFUaEPVmm9MG2Ucx5uo8aWZr/3zhkzfGEdhBTp6pf9L71raUlr+bERGWUsi
        0fjKJb7xhX9jTLY4XebUMZgzRuWP0kFlwEahIdCJBJA3oC3QuGVqIjEuLvg1z7Fi756WthvQ6yWfXHJ/
        fvf93HOXPtfnkckyLOgwP/qX1zMQ49TIB1GW2Yyx6ltRVh2IcUzjqFr9sDhj2oWE3+xoGbjjb6IK54so
        q7qxXF15UJyVWhLh8XIrpCTAwzI3V0zKZ8SZtxc+/Etb4SUpQFqCY2ZnSkoeEWcX3HkpCxBWWaY5Y3gp
        C8RYdVAQHkmPTWEIMH/8f+fThCdsHK+jT5YAUZb5N2P4zY4XEHfoqZOlguy21/Pdn/4mJPO3r5Fno8WF
        dbuOOklKyMI2/d1wjQE8Nj3mrRpERQeFrQb02ywCItzuif3Iafma09bcW1ogkCp8wFoNnfMEtLU+AS9a
        avGtWScg4Hbi2tkzGP3wdNZcff9dtJvsfE3O6cWY1USF3IktAf7Oa6nwhPdqXNA4heEJ5cZ6PMfYBRhd
        rQiFQhgYGEB/f39KOi9249QHH/Fc6OxC9+dfoERXt12XdXoxkoMEL5AuPOEdWx1UDj8lkU4gHA5jYmIC
        gUCACt/b2wulwYHSKhuPoorDZ53dAgGCxenFsNVMZUmFbN6qvZsufELgiKMdlSKJnQQSEleuXBEIfNPT
        g8MaG8r0tTxyhsX5TzspAUK1sw3BLCRkMZb5R7wxlYBYIpMAYXJyEoODg/clQHjV3kDlEZOTQLJENgIJ
        iaGhIekIbOFHmSE7gYREMBiUkkA7FDkIJLdEwQoQxsfHcUjFQaFzFqYAaYXquhYUq20o09lhdhxFZ9cl
        6QgYMggkJAhjY2P8i9196XJ+BOSGBkqgROfCmXMX8MnFy1lx9nwn2l95DXKdmwq/5wLl1lbIjY2QG4SU
        GBtx2NiQPaYGqGwtVPg9F0iPH4zTB02KQLmSJ4F7Ein6T7mSR4EtUnUCc2FPBcptbSg1H0OpaWcU5qOo
        ZI/tSJW9lQq/5wLkhX3jpBxfnj6YBc/i47eLce4tOcWbJ8uhNNdT4fdBoAGh7qewEXosK26PPo7F3iex
        0PO0gFBXESpMBSBA+G3sAH7qE0oUlADh92sHsNT3hDQErn7dgps/+HImPuPH3HA7IoNtGPmqNX8CwZHr
        iMfj98Xq6ipmZ2fx/fBIYQoQ1tbWcD00kX+BpaUlLCws5MTi4iJ/7tz8IhRGDxV+VwWUNT4U6+txSOvm
        10q7TyCwsrKC5eXlnEkIkLpqpw9HLE18a5DfhSqHd/cEFGyLoNtcxh3flUcoWaDC1ga5xrH9tabimvdP
        IBKJUB8umZiamqIESO3iqi2JXRWoqDnBX+R5jYtfk0dqt1tAafejWOfhr1Gid/P9o+wEOOaOeGMyp2y1
        1AuceIkDwVGsr68/ENORWV5AXJ/0ZF+3e6g8yfADHDGWiYt3JDPHaeGtaQZn9wrQGT3Q6Z0wm90PBKmh
        0bmo+uSaES7D3+1kiClmUfVROwoFMsi3ZmHc1I4CgR9mRZ3soRjLTIt3Sh3BQHfMWF4UZZlfxQdJlSjL
        3KKmGsSM6qIYx8yID5YcrPrGWrrJHuRx+rmaadya2kKmuDCbVIF95l4GfrrNL6yqSTzd5j/G3CIIfi32
        JAAAAABJRU5ErkJggg==
</value>
  </data>
</root>